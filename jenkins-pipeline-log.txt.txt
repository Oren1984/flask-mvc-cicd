Started by user oren
Obtained Jenkinsfile from git https://github.com/Oren1984/flask-mvc-cicd.git
[Pipeline] Start of Pipeline
[Pipeline] node
Running on oren-worker in /home/oren/jenkins-agent/workspace/flask-mvc-cicd
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
The recommended git tool is: git
No credentials specified
Fetching changes from the remote Git repository
Checking out Revision 518c1076d50336df09008556fceea66b4f252eb6 (refs/remotes/origin/main)
Commit message: "Allow Trivy timeout without failing pipeline"
 > git rev-parse --resolve-git-dir /home/oren/jenkins-agent/workspace/flask-mvc-cicd/.git # timeout=10
 > git config remote.origin.url https://github.com/Oren1984/flask-mvc-cicd.git # timeout=10
Fetching upstream changes from https://github.com/Oren1984/flask-mvc-cicd.git
 > git --version # timeout=10
 > git --version # 'git version 2.34.1'
 > git fetch --tags --force --progress -- https://github.com/Oren1984/flask-mvc-cicd.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 518c1076d50336df09008556fceea66b4f252eb6 # timeout=10
 > git rev-list --no-walk 4133913cb3e0db7f0b6c54a45aa8f19077744090 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Build Docker Image)
[Pipeline] echo
Building Docker image...
[Pipeline] sh
+ docker build -t oren1984/flask-mvc-mysql-app .
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.02kB done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/python:3.10-slim
#2 ...

#3 [auth] library/python:pull token for registry-1.docker.io
#3 DONE 0.0s

#2 [internal] load metadata for docker.io/library/python:3.10-slim
#2 DONE 1.9s

#4 [internal] load .dockerignore
#4 transferring context: 567B done
#4 DONE 0.0s

#5 [1/9] FROM docker.io/library/python:3.10-slim@sha256:9dd6774a1276178f94b0cc1fb1f0edd980825d0ea7634847af9940b1b6273c13
#5 DONE 0.0s

#6 [internal] load build context
#6 transferring context: 16.32kB 0.0s done
#6 DONE 0.0s

#7 [6/9] RUN pip install --upgrade pip
#7 CACHED

#8 [2/9] WORKDIR /app
#8 CACHED

#9 [3/9] RUN apt-get update && apt-get install -y     default-libmysqlclient-dev build-essential pkg-config netcat-openbsd
#9 CACHED

#10 [4/9] COPY requirements.txt /app/
#10 CACHED

#11 [5/9] COPY wait-for-it.sh /app/wait-for-it.sh
#11 CACHED

#12 [7/9] RUN pip install -r requirements.txt
#12 CACHED

#13 [8/9] RUN chmod +x /app/wait-for-it.sh
#13 CACHED

#14 [9/9] COPY . /app/
#14 DONE 1.4s

#15 exporting to image
#15 exporting layers
#15 exporting layers 5.4s done
#15 writing image sha256:740639198099a37d1034e640845d63b3f3f658c98dc989a74ef4a21ead778813
#15 writing image sha256:740639198099a37d1034e640845d63b3f3f658c98dc989a74ef4a21ead778813 0.2s done
#15 naming to docker.io/oren1984/flask-mvc-mysql-app
#15 naming to docker.io/oren1984/flask-mvc-mysql-app 0.6s done
#15 DONE 7.1s
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Security Scan with Trivy)
[Pipeline] echo
Running Trivy security scan...
[Pipeline] sh
+ trivy image --severity HIGH,CRITICAL --no-progress --scanners vuln --format table oren1984/flask-mvc-mysql-app
2025-07-15T20:13:02+03:00	INFO	[vuln] Vulnerability scanning is enabled
2025-07-15T20:28:55+03:00	WARN	Provide a higher timeout value, see https://trivy.dev/v0.64/docs/configuration
2025-07-15T20:28:55+03:00	FATAL	Fatal error	run error: image scan error: scan error: scan failed: failed analysis: analyze error: pipeline error: context deadline exceeded
+ true
+ trivy image --no-progress --scanners vuln --format table oren1984/flask-mvc-mysql-app
2025-07-15T20:29:02+03:00	INFO	[vuln] Vulnerability scanning is enabled
2025-07-15T20:48:42+03:00	WARN	Provide a higher timeout value, see https://trivy.dev/v0.64/docs/configuration
2025-07-15T20:48:42+03:00	FATAL	Fatal error	run error: image scan error: scan error: scan failed: failed analysis: analyze error: pipeline error: context deadline exceeded
+ true
[Pipeline] archiveArtifacts
Archiving artifacts
Recording fingerprints
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Push to Docker Hub)
[Pipeline] echo
Pushing Docker image to Docker Hub...
[Pipeline] withCredentials
Masking supported pattern matches of $DOCKER_PASS
[Pipeline] {
[Pipeline] sh
+ echo ****
+ docker login -u oren1984 --password-stdin

WARNING! Your credentials are stored unencrypted in '/home/oren/.docker/config.json'.
Configure a credential helper to remove this warning. See
https://docs.docker.com/go/credential-store/

Login Succeeded
+ docker push oren1984/flask-mvc-mysql-app
Using default tag: latest
The push refers to repository [docker.io/oren1984/flask-mvc-mysql-app]
60359154ccec: Preparing
b543aee7f701: Preparing
4f5bd372a188: Preparing
e933b01d06ec: Preparing
2e7aeae188ef: Preparing
4b4f7ae02ebc: Preparing
308b760238e7: Preparing
6b6afa405c68: Preparing
31abbb538de0: Preparing
a2ccf7527b3c: Preparing
abd92ba2021e: Preparing
1bb35e8b4de1: Preparing
4b4f7ae02ebc: Waiting
308b760238e7: Waiting
6b6afa405c68: Waiting
31abbb538de0: Waiting
a2ccf7527b3c: Waiting
abd92ba2021e: Waiting
1bb35e8b4de1: Waiting
2e7aeae188ef: Layer already exists
e933b01d06ec: Layer already exists
4f5bd372a188: Layer already exists
b543aee7f701: Layer already exists
4b4f7ae02ebc: Layer already exists
31abbb538de0: Layer already exists
6b6afa405c68: Layer already exists
308b760238e7: Layer already exists
a2ccf7527b3c: Layer already exists
abd92ba2021e: Layer already exists
1bb35e8b4de1: Layer already exists
60359154ccec: Pushed
latest: digest: sha256:ceae36cbd5eaf8056521e7637745011494c9137ebf78317b2f7ee1618b108dfb size: 2834
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy to Kubernetes with Helm)
[Pipeline] echo
Deploying to Kubernetes with Helm...
[Pipeline] sh
+ helm upgrade --install flask-release ./helm/flask-chart --values ./helm/flask-chart/values.yaml
Release "flask-release" has been upgraded. Happy Helming!
NAME: flask-release
LAST DEPLOYED: Tue Jul 15 20:54:41 2025
NAMESPACE: default
STATUS: deployed
REVISION: 7
NOTES:
1. Get the application URL by running these commands:
  export NODE_PORT=$(kubectl get --namespace default -o jsonpath="{.spec.ports[0].nodePort}" services flask-release-flask-chart)
  export NODE_IP=$(kubectl get nodes --namespace default -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] echo
Pipeline completed.
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
